{"version":3,"sources":["webpack:///./src/assets/player/peertube-cap-level-controller.ts","webpack:///./src/assets/player/p2p-media-loader/hls-plugin.ts","webpack:///./src/assets/player/p2p-media-loader/p2p-media-loader-plugin.ts"],"names":[],"mappings":"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","file":"10.chunk.js?v=7770","sourcesContent":["//@ts-nocheck\r\n\r\nimport { Events } from 'hls.js/src/events';\r\nimport type { Level } from 'hls.js/src/types/level';\r\nimport type {\r\n  ManifestParsedData,\r\n  BufferCodecsData,\r\n  MediaAttachingData,\r\n  FPSDropLevelCappingData,\r\n} from 'hls.js/src/types/events';\r\nimport type { ComponentAPI } from 'hls.js/src/types/component-api';\r\nimport type Hls from 'hls.js';\r\n\r\n\r\nclass CapLevelController implements ComponentAPI {\r\n  public autoLevelCapping: number;\r\n  public firstLevel: number;\r\n  public media: HTMLVideoElement | null;\r\n  public restrictedLevels: Array<number>;\r\n  public timer: number | undefined;\r\n  public paused: Boolean\r\n\r\n  private hls: Hls;\r\n  private streamController?: any;\r\n  public clientRect: { width: number; height: number } | null;\r\n  public clientRectLast: { width: number; height: number } | null;\r\n\r\n  constructor(hls: Hls) {\r\n    this.hls = hls;\r\n    this.autoLevelCapping = Number.POSITIVE_INFINITY;\r\n    this.firstLevel = -1;\r\n    this.media = null;\r\n    this.restrictedLevels = [];\r\n    this.timer = undefined;\r\n    this.clientRect = null;\r\n    this.paused = true\r\n\r\n    this.hls.pauseCapping = () => {\r\n        this.paused = true\r\n    }\r\n\r\n    this.hls.resumeCapping = () => {\r\n        this.paused = false\r\n    }\r\n\r\n    this.registerListeners();\r\n  }\r\n\r\n  public setStreamController(streamController: StreamController) {\r\n    this.streamController = streamController;\r\n  }\r\n\r\n  public destroy() {\r\n    this.unregisterListener();\r\n    if (this.hls.config.capLevelToPlayerSize) {\r\n      this.stopCapping();\r\n    }\r\n    this.media = null;\r\n    this.clientRect = null;\r\n    // @ts-ignore\r\n    this.hls = this.streamController = null;\r\n  }\r\n\r\n  protected registerListeners() {\r\n    const { hls } = this;\r\n    hls.on(Events.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this);\r\n    hls.on(Events.MEDIA_ATTACHING, this.onMediaAttaching, this);\r\n    hls.on(Events.MANIFEST_PARSED, this.onManifestParsed, this);\r\n    hls.on(Events.BUFFER_CODECS, this.onBufferCodecs, this);\r\n    hls.on(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\r\n  }\r\n\r\n  protected unregisterListener() {\r\n    const { hls } = this;\r\n    hls.off(Events.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this);\r\n    hls.off(Events.MEDIA_ATTACHING, this.onMediaAttaching, this);\r\n    hls.off(Events.MANIFEST_PARSED, this.onManifestParsed, this);\r\n    hls.off(Events.BUFFER_CODECS, this.onBufferCodecs, this);\r\n    hls.off(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\r\n  }\r\n\r\n  protected onFpsDropLevelCapping(\r\n    event: Events.FPS_DROP_LEVEL_CAPPING,\r\n    data: FPSDropLevelCappingData\r\n  ) {\r\n    // Don't add a restricted level more than once\r\n    if (\r\n      CapLevelController.isLevelAllowed(\r\n        data.droppedLevel,\r\n        this.restrictedLevels\r\n      )\r\n    ) {\r\n      this.restrictedLevels.push(data.droppedLevel);\r\n    }\r\n  }\r\n\r\n  protected onMediaAttaching(\r\n    event: Events.MEDIA_ATTACHING,\r\n    data: MediaAttachingData\r\n  ) {\r\n    this.media = data.media instanceof HTMLVideoElement ? data.media : null;\r\n  }\r\n\r\n  protected onManifestParsed(\r\n    event: any,\r\n    data: any\r\n  ) {\r\n    const hls = this.hls;\r\n    this.restrictedLevels = [];\r\n    this.firstLevel = data.firstLevel;\r\n    if (hls.config.capLevelToPlayerSize && data.video) {\r\n      // Start capping immediately if the manifest has signaled video codecs\r\n      this.startCapping();\r\n    }\r\n  }\r\n\r\n  // Only activate capping when playing a video stream; otherwise, multi-bitrate audio-only streams will be restricted\r\n  // to the first level\r\n  protected onBufferCodecs(\r\n    event: Events.BUFFER_CODECS,\r\n    data: BufferCodecsData\r\n  ) {\r\n    const hls = this.hls;\r\n    if (hls.config.capLevelToPlayerSize && data.video) {\r\n      // If the manifest did not signal a video codec capping has been deferred until we're certain video is present\r\n      this.startCapping();\r\n    }\r\n  }\r\n\r\n  protected onMediaDetaching() {\r\n    this.stopCapping();\r\n  }\r\n\r\n  detectPlayerSize() {\r\n    if (this.media && this.mediaHeight > 0 && this.mediaWidth > 0) {\r\n      const levels = this.hls.levels;\r\n      \r\n      if (levels.length) {\r\n        const hls = this.hls;\r\n        hls.autoLevelCapping = this.getMaxLevel(levels.length - 1);\r\n\r\n        if (\r\n          hls.autoLevelCapping > this.autoLevelCapping &&\r\n          this.streamController\r\n        ) {\r\n          // if auto level capping has a higher value for the previous one, flush the buffer using nextLevelSwitch\r\n          // usually happen when the user go to the fullscreen mode.\r\n          this.streamController.nextLevelSwitch();\r\n        }\r\n        this.autoLevelCapping = hls.autoLevelCapping;\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n   * returns level should be the one with the dimensions equal or greater than the media (player) dimensions (so the video will be downscaled)\r\n   */\r\n  getMaxLevel(capLevelIndex: number): number {\r\n    const levels = this.hls.levels;\r\n    if (!levels.length) {\r\n      return -1;\r\n    }\r\n\r\n    const validLevels = levels.filter(\r\n      (level, index) =>\r\n        CapLevelController.isLevelAllowed(index, this.restrictedLevels) &&\r\n        index <= capLevelIndex\r\n    );\r\n\r\n\r\n\r\n    this.clientRect = null;\r\n    return CapLevelController.getMaxLevelByMediaSize(\r\n      validLevels,\r\n      this.mediaWidth,\r\n      this.mediaHeight\r\n    );\r\n  }\r\n\r\n  capp(){\r\n    this.autoLevelCapping = Number.POSITIVE_INFINITY;\r\n    this.hls.firstLevel = this.getMaxLevel(this.firstLevel);\r\n    \r\n    this.detectPlayerSize();\r\n  }\r\n\r\n  startCapping() {\r\n    if (this.timer) {\r\n      // Don't reset capping if started twice; this can happen if the manifest signals a video codec\r\n      return;\r\n    }\r\n    this.autoLevelCapping = Number.POSITIVE_INFINITY;\r\n    this.hls.firstLevel = this.getMaxLevel(this.firstLevel);\r\n    self.clearInterval(this.timer);\r\n    this.timer = self.setInterval(this.detectPlayerSize.bind(this), 10000);\r\n    this.detectPlayerSize();\r\n  }\r\n\r\n  stopCapping() {\r\n    this.restrictedLevels = [];\r\n    this.firstLevel = -1;\r\n    //this.autoLevelCapping = Number.POSITIVE_INFINITY;\r\n    \r\n    if (this.timer) {\r\n      self.clearInterval(this.timer);\r\n      this.timer = undefined;\r\n    }\r\n  }\r\n\r\n\r\n  getDimensions(): { width: number; height: number } {\r\n\r\n    if (this.paused && this.clientRectLast){\r\n        return this.clientRectLast\r\n    }\r\n\r\n    if (this.clientRect) {\r\n      return this.clientRect;\r\n    }\r\n    const media = this.media;\r\n    const boundsRect = {\r\n      width: 0,\r\n      height: 0,\r\n    };\r\n\r\n    if (media) {\r\n      const clientRect = media.getBoundingClientRect();\r\n      boundsRect.width = clientRect.width;\r\n      boundsRect.height = clientRect.height;\r\n      if (!boundsRect.width && !boundsRect.height) {\r\n        // When the media element has no width or height (equivalent to not being in the DOM),\r\n        // then use its width and height attributes (media.width, media.height)\r\n        boundsRect.width =\r\n          clientRect.right - clientRect.left || media.width || 0;\r\n        boundsRect.height =\r\n          clientRect.bottom - clientRect.top || media.height || 0;\r\n      }\r\n    }\r\n\r\n    this.clientRectLast = this.clientRect = boundsRect;\r\n    \r\n    return boundsRect;\r\n  }\r\n\r\n  get mediaWidth(): number {\r\n    return this.getDimensions().width * CapLevelController.contentScaleFactor;\r\n  }\r\n\r\n  get mediaHeight(): number {\r\n    return this.getDimensions().height * CapLevelController.contentScaleFactor;\r\n  }\r\n\r\n  static get contentScaleFactor(): number {\r\n    let pixelRatio = 1;\r\n    try {\r\n      pixelRatio = self.devicePixelRatio;\r\n    } catch (e) {\r\n      /* no-op */\r\n    }\r\n\r\n    pixelRatio = 0.5\r\n\r\n    //if (pixelRatio > 1.5) pixelRatio = 1.5\r\n\r\n    return pixelRatio;\r\n  }\r\n\r\n  static isLevelAllowed(\r\n    level: number,\r\n    restrictedLevels: Array<number> = []\r\n  ): boolean {\r\n    return restrictedLevels.indexOf(level) === -1;\r\n  }\r\n\r\n  static getMaxLevelByMediaSize(\r\n    levels: Array<any>,\r\n    width: number,\r\n    height: number\r\n  ): number {\r\n    if (!levels || !levels.length) {\r\n      return -1;\r\n    }\r\n\r\n    // Levels can have the same dimensions but differing bandwidths - since levels are ordered, we can look to the next\r\n    // to determine whether we've chosen the greatest bandwidth for the media's dimensions\r\n    const atGreatestBandiwdth = (curLevel : any, nextLevel : any) => {\r\n      if (!nextLevel) {\r\n        return true;\r\n      }\r\n\r\n      return (\r\n        curLevel.width !== nextLevel.width ||\r\n        curLevel.height !== nextLevel.height\r\n      );\r\n    };\r\n\r\n\r\n    // If we run through the loop without breaking, the media's dimensions are greater than every level, so default to\r\n    // the max level\r\n    let maxLevelIndex = levels.length - 1;\r\n\r\n    for (let i = 0; i < levels.length; i += 1) {\r\n      const level = levels[i];\r\n      if (\r\n        (level.width >= width || level.height >= height) &&\r\n        atGreatestBandiwdth(level, levels[i + 1])\r\n      ) {\r\n        maxLevelIndex = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return maxLevelIndex;\r\n  }\r\n}\r\n\r\nexport default CapLevelController;\r\n","// Thanks https://github.com/streamroot/videojs-hlsjs-plugin\r\n// We duplicated this plugin to choose the hls.js version we want, because streamroot only provide a bundled file\r\n\r\n//import * as HlsjsLigt from 'hls.js/dist/hls.light.js'\r\n\r\nimport * as Hlsjs from 'hls.js'\r\n\r\nimport videojs from 'video.js'\r\nimport { HlsjsConfigHandlerOptions, QualityLevelRepresentation, QualityLevels, VideoJSTechHLS } from '../peertube-videojs-typings'\r\nimport CapLevelController from '../peertube-cap-level-controller'\r\ntype ErrorCounts = {\r\n  [ type: string ]: number\r\n}\r\n\r\ntype Metadata = {\r\n  levels: Hlsjs.Level[]\r\n}\r\n\r\ntype Fmp4Data = {\r\n  audio: Array<ArrayBuffer>,\r\n  video : Array<ArrayBuffer>,\r\n  audiovideo : Array<ArrayBuffer>\r\n}\r\n\r\n\r\n\r\ntype CustomAudioTrack = Hlsjs.MediaPlaylist & { name?: string, lang?: string }\r\n\r\nconst registerSourceHandler = function (vjs: typeof videojs) {\r\n  if (!Hlsjs.default.isSupported()) {\r\n    console.warn('Hls.js is not supported in this browser!')\r\n    return\r\n  }\r\n\r\n  const html5 = vjs.getTech('Html5')\r\n\r\n  if (!html5) {\r\n    console.error('Not supported version if video.js')\r\n    return\r\n  }\r\n\r\n  // FIXME: typings\r\n  (html5 as any).registerSourceHandler({\r\n    canHandleSource: function (source: videojs.Tech.SourceObject) {\r\n      const hlsTypeRE = /^application\\/x-mpegURL|application\\/vnd\\.apple\\.mpegurl$/i\r\n      const hlsExtRE = /\\.m3u8/i\r\n\r\n      if (hlsTypeRE.test(source.type)) return 'probably'\r\n      if (hlsExtRE.test(source.src)) return 'maybe'\r\n\r\n      return ''\r\n    },\r\n\r\n    handleSource: function (source: videojs.Tech.SourceObject, tech: VideoJSTechHLS) {\r\n      if (tech.hlsProvider) {\r\n        tech.hlsProvider.dispose()\r\n      }\r\n\r\n      tech.hlsProvider = new Html5Hlsjs(vjs, source, tech)\r\n\r\n      return tech.hlsProvider\r\n    }\r\n  }, 0);\r\n\r\n  // FIXME: typings\r\n  (vjs as any).Html5Hlsjs = Html5Hlsjs\r\n}\r\n\r\nfunction hlsjsConfigHandler (this: videojs.Player, options: HlsjsConfigHandlerOptions) {\r\n  const player = this\r\n\r\n  if (!options) return\r\n\r\n  if (!player.srOptions_) {\r\n    player.srOptions_ = {}\r\n  }\r\n\r\n  if (!player.srOptions_.hlsjsConfig) {\r\n    player.srOptions_.hlsjsConfig = options.hlsjsConfig\r\n  }\r\n\r\n  if (!player.srOptions_.captionConfig) {\r\n    player.srOptions_.captionConfig = options.captionConfig\r\n  }\r\n\r\n  if (options.levelLabelHandler && !player.srOptions_.levelLabelHandler) {\r\n    player.srOptions_.levelLabelHandler = options.levelLabelHandler\r\n  }\r\n}\r\n\r\nconst registerConfigPlugin = function (vjs: typeof videojs) {\r\n  // Used in Brightcove since we don't pass options directly there\r\n  const registerVjsPlugin = vjs.registerPlugin || vjs.plugin\r\n  registerVjsPlugin('hlsjs', hlsjsConfigHandler)\r\n}\r\n\r\nclass Html5Hlsjs {\r\n  private static readonly hooks: { [id: string]: Function[] } = {}\r\n\r\n  private readonly videoElement: HTMLVideoElement\r\n  private readonly errorCounts: ErrorCounts = {}\r\n  private readonly player: videojs.Player\r\n  private readonly tech: videojs.Tech\r\n  private readonly source: videojs.Tech.SourceObject\r\n  private readonly vjs: typeof videojs\r\n\r\n  private hls: Hlsjs.default & { manualLevel?: number, audioTrack?: any, audioTracks?: CustomAudioTrack[] } // FIXME: typings\r\n  private hlsjsConfig: Partial<Hlsjs.HlsConfig & { cueHandler: any }> = null\r\n\r\n  private _duration: number = null\r\n  private metadata: Metadata = null\r\n  private isLive: boolean = null\r\n  private dvrDuration: number = null\r\n  private edgeMargin: number = null\r\n\r\n  private handlers: { [ id in 'play' | 'playing' | 'textTracksChange' | 'audioTracksChange' ]: EventListener } = {\r\n    play: null,\r\n    playing: null,\r\n    textTracksChange: null,\r\n    audioTracksChange: null\r\n  }\r\n\r\n  private uiTextTrackHandled = false\r\n\r\n  constructor (vjs: typeof videojs, source: videojs.Tech.SourceObject, tech: videojs.Tech) {\r\n    this.vjs = vjs\r\n    this.source = source\r\n\r\n    this.tech = tech;\r\n    (this.tech as any).name_ = 'Hlsjs'\r\n\r\n    this.videoElement = tech.el() as HTMLVideoElement\r\n    this.player = vjs((tech.options_ as any).playerId)\r\n\r\n    this.videoElement.addEventListener('error', event => {\r\n      let errorTxt: string\r\n      const mediaError = ((event.currentTarget || event.target) as HTMLVideoElement).error\r\n\r\n      if (!mediaError) return\r\n\r\n      switch (mediaError.code) {\r\n        case mediaError.MEDIA_ERR_ABORTED:\r\n          errorTxt = 'You aborted the video playback'\r\n          break\r\n        case mediaError.MEDIA_ERR_DECODE:\r\n          errorTxt = 'The video playback was aborted due to a corruption problem or because the video used features your browser did not support'\r\n          this._handleMediaError(mediaError)\r\n          break\r\n        case mediaError.MEDIA_ERR_NETWORK:\r\n          errorTxt = 'A network error caused the video download to fail part-way'\r\n          break\r\n        case mediaError.MEDIA_ERR_SRC_NOT_SUPPORTED:\r\n          errorTxt = 'The video could not be loaded, either because the server or network failed or because the format is not supported'\r\n          break\r\n\r\n        default:\r\n          errorTxt = mediaError.message\r\n      }\r\n\r\n    })\r\n\r\n    this.initialize()\r\n  }\r\n\r\n  duration () {\r\n    return this._duration || this.videoElement.duration || 0\r\n  }\r\n\r\n  seekable () {\r\n    if (this.hls.media) {\r\n      if (!this.isLive) {\r\n        return this.vjs.createTimeRanges(0, this.hls.media.duration)\r\n      }\r\n\r\n      // Video.js doesn't seem to like floating point timeranges\r\n      const startTime = Math.round(this.hls.media.duration - this.dvrDuration)\r\n      const endTime = Math.round(this.hls.media.duration - this.edgeMargin)\r\n\r\n      return this.vjs.createTimeRanges(startTime, endTime)\r\n    }\r\n\r\n    return this.vjs.createTimeRanges()\r\n  }\r\n\r\n  // See comment for `initialize` method.\r\n  dispose () {\r\n    this.videoElement.removeEventListener('play', this.handlers.play)\r\n    this.videoElement.removeEventListener('playing', this.handlers.playing)\r\n\r\n    this.player.textTracks().removeEventListener('change', this.handlers.textTracksChange)\r\n    this.uiTextTrackHandled = false\r\n\r\n    this.hls.destroy()\r\n  }\r\n\r\n  static addHook (type: string, callback: Function) {\r\n    Html5Hlsjs.hooks[ type ] = this.hooks[ type ] || []\r\n    Html5Hlsjs.hooks[ type ].push(callback)\r\n  }\r\n\r\n  static removeHook (type: string, callback: Function) {\r\n    if (Html5Hlsjs.hooks[ type ] === undefined) return false\r\n\r\n    const index = Html5Hlsjs.hooks[ type ].indexOf(callback)\r\n    if (index === -1) return false\r\n\r\n    Html5Hlsjs.hooks[ type ].splice(index, 1)\r\n\r\n    return true\r\n  }\r\n\r\n  private _executeHooksFor (type: string) {\r\n    if (Html5Hlsjs.hooks[ type ] === undefined) {\r\n      return\r\n    }\r\n\r\n    // ES3 and IE < 9\r\n    for (let i = 0; i < Html5Hlsjs.hooks[ type ].length; i++) {\r\n      Html5Hlsjs.hooks[ type ][ i ](this.player, this.hls)\r\n    }\r\n  }\r\n\r\n  private _handleMediaError (error: any) {\r\n\r\n    console.log('this.errorCounts', this.errorCounts)\r\n\r\n    if (this.errorCounts[ Hlsjs.ErrorTypes.MEDIA_ERROR ] === 1) {\r\n      console.info('trying to recover media error')\r\n      this.hls.recoverMediaError()\r\n      return\r\n    }\r\n\r\n    if (this.errorCounts[ Hlsjs.ErrorTypes.MEDIA_ERROR ] === 2) {\r\n      console.info('2nd try to recover media error (by swapping audio codec')\r\n      this.hls.swapAudioCodec()\r\n      this.hls.recoverMediaError()\r\n      return\r\n    }\r\n\r\n   \r\n\r\n    if (this.errorCounts[ Hlsjs.ErrorTypes.MEDIA_ERROR ] > 2) {\r\n      console.info('bubbling media error up to VIDEOJS')\r\n\r\n      this.hls.recoverMediaError()\r\n\r\n      //this.hls.destroy()\r\n\r\n      //this.tech.error = () => error\r\n      //this.tech.trigger('error')\r\n\r\n      return\r\n    }\r\n  }\r\n\r\n  private _handleNetworkError (error: any) {\r\n\r\n    setTimeout(() => this.hls.startLoad(), 1000)\r\n\r\n    if (this.errorCounts[ Hlsjs.ErrorTypes.NETWORK_ERROR] <= 1) {\r\n      console.info('trying to recover network error', error)\r\n\r\n      // Wait 1 second and retry\r\n      setTimeout(() => this.hls.startLoad(), 1000)\r\n\r\n      // Reset error count on success\r\n      this.hls.once(Hlsjs.Events.FRAG_LOADED, () => {\r\n        this.errorCounts[ Hlsjs.ErrorTypes.NETWORK_ERROR] = 0\r\n      })\r\n\r\n      return\r\n    }\r\n\r\n    console.info('bubbling network error up to VIDEOJS')\r\n   // this.hls.destroy()\r\n    this.tech.error = () => error\r\n    this.tech.trigger('error')\r\n  }\r\n\r\n  private _onError (_event: any, data: Hlsjs.ErrorData) {\r\n\r\n    const error: { message: string, code?: number } = {\r\n      message: `HLS.js error: ${data.type} - fatal: ${data.fatal} - ${data.details}`\r\n    }\r\n\r\n    console.error(error)\r\n\r\n    if (!data.fatal) return\r\n\r\n    // increment/set error count\r\n    if (this.errorCounts[ data.type ]) this.errorCounts[ data.type ] += 1\r\n    else this.errorCounts[ data.type ] = 1\r\n\r\n    if (data.type === Hlsjs.ErrorTypes.NETWORK_ERROR) {\r\n      error.code = 2\r\n      this._handleNetworkError(error)\r\n    } else if (data.type === Hlsjs.ErrorTypes.MEDIA_ERROR && data.details !== 'manifestIncompatibleCodecsError') {\r\n      error.code = 3\r\n      this._handleMediaError(error)\r\n    } else {\r\n     // this.hls.destroy()\r\n      this.tech.error = () => error as any\r\n      this.tech.trigger('error')\r\n    }\r\n  }\r\n\r\n  private switchQuality (qualityId: number) {\r\n    this.hls.nextLevel = qualityId\r\n  }\r\n\r\n  private _levelLabel (level: Hlsjs.Level) {\r\n    if (this.player.srOptions_.levelLabelHandler) {\r\n      return this.player.srOptions_.levelLabelHandler(level)\r\n    }\r\n\r\n    if (level.height) return level.height + 'p'\r\n    if (level.width) return Math.round(level.width * 9 / 16) + 'p'\r\n    if (level.bitrate) return (level.bitrate / 1000) + 'kbps'\r\n\r\n    return 0\r\n  }\r\n\r\n  private _relayQualityChange (qualityLevels: QualityLevels) {\r\n\r\n    // Determine if it is \"Auto\" (all tracks enabled)\r\n    let isAuto = true\r\n\r\n    for (let i = 0; i < qualityLevels.length; i++) {\r\n      if (!qualityLevels[ i ]._enabled) {\r\n        isAuto = false\r\n        break\r\n      }\r\n    }\r\n\r\n    // Interact with ME\r\n    if (isAuto) {\r\n      this.hls.currentLevel = -1\r\n      return\r\n    }\r\n\r\n    // Find ID of highest enabled track\r\n    let selectedTrack: number\r\n\r\n    for (selectedTrack = qualityLevels.length - 1; selectedTrack >= 0; selectedTrack--) {\r\n      if (qualityLevels[ selectedTrack ]._enabled) {\r\n        break\r\n      }\r\n    }\r\n\r\n    this.hls.currentLevel = selectedTrack\r\n  }\r\n\r\n  private _handleQualityLevels () {\r\n    if (!this.metadata) return\r\n\r\n    const qualityLevels = this.player.qualityLevels && this.player.qualityLevels()\r\n    if (!qualityLevels) return\r\n\r\n    for (let i = 0; i < this.metadata.levels.length; i++) {\r\n      const details = this.metadata.levels[ i ]\r\n      const representation: QualityLevelRepresentation = {\r\n        id: i,\r\n        width: details.width,\r\n        height: details.height,\r\n        bandwidth: details.bitrate,\r\n        bitrate: details.bitrate,\r\n        _enabled: true\r\n      }\r\n\r\n      const self = this\r\n      representation.enabled = function (this: QualityLevels, level: number, toggle?: boolean) {\r\n        // Brightcove switcher works TextTracks-style (enable tracks that it wants to ABR on)\r\n        if (typeof toggle === 'boolean') {\r\n\r\n          this[ level ]._enabled = toggle\r\n          self._relayQualityChange(this)\r\n        }\r\n\r\n        return this[ level ]._enabled\r\n      }\r\n\r\n      qualityLevels.addQualityLevel(representation)\r\n    }\r\n  }\r\n\r\n  private _notifyVideoQualities () {\r\n    if (!this.metadata) return\r\n    const cleanTracklist = []\r\n\r\n    if (this.metadata.levels.length > 1) {\r\n      const autoLevel = {\r\n        id: -1,\r\n        label: 'auto',\r\n        selected: this.hls.manualLevel === -1\r\n      }\r\n      cleanTracklist.push(autoLevel)\r\n    }\r\n\r\n    this.metadata.levels.forEach((level, index) => {\r\n      // Don't write in level (shared reference with Hls.js)\r\n      const quality = {\r\n        id: index,\r\n        selected: index === this.hls.manualLevel,\r\n        label: this._levelLabel(level)\r\n      }\r\n\r\n      cleanTracklist.push(quality)\r\n    })\r\n\r\n    const payload = {\r\n      qualityData: { video: cleanTracklist },\r\n      qualitySwitchCallback: this.switchQuality.bind(this)\r\n    }\r\n\r\n    this.tech.trigger('loadedqualitydata', payload)\r\n\r\n    // Self-de-register so we don't raise the payload multiple times\r\n    this.videoElement.removeEventListener('playing', this.handlers.playing)\r\n  }\r\n\r\n  private _updateSelectedAudioTrack () {\r\n    const playerAudioTracks = this.tech.audioTracks()\r\n    for (let j = 0; j < playerAudioTracks.length; j++) {\r\n      // FIXME: typings\r\n      if ((playerAudioTracks[ j ] as any).enabled) {\r\n        this.hls.audioTrack = j\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  private _onAudioTracks () {\r\n    const hlsAudioTracks = this.hls.audioTracks\r\n    const playerAudioTracks = this.tech.audioTracks()\r\n\r\n    if (hlsAudioTracks.length > 1 && playerAudioTracks.length === 0) {\r\n      // Add Hls.js audio tracks if not added yet\r\n      for (let i = 0; i < hlsAudioTracks.length; i++) {\r\n        playerAudioTracks.addTrack(new this.vjs.AudioTrack({\r\n          id: i.toString(),\r\n          kind: 'alternative',\r\n          label: hlsAudioTracks[ i ].name || hlsAudioTracks[ i ].lang,\r\n          language: hlsAudioTracks[ i ].lang,\r\n          enabled: i === this.hls.audioTrack\r\n        }))\r\n      }\r\n\r\n      // Handle audio track change event\r\n      this.handlers.audioTracksChange = this._updateSelectedAudioTrack.bind(this)\r\n      playerAudioTracks.addEventListener('change', this.handlers.audioTracksChange)\r\n    }\r\n  }\r\n\r\n  private _getTextTrackLabel (textTrack: TextTrack) {\r\n    // Label here is readable label and is optional (used in the UI so if it is there it should be different)\r\n    return textTrack.label ? textTrack.label : textTrack.language\r\n  }\r\n\r\n  private _isSameTextTrack (track1: TextTrack, track2: TextTrack) {\r\n    return this._getTextTrackLabel(track1) === this._getTextTrackLabel(track2)\r\n      && track1.kind === track2.kind\r\n  }\r\n\r\n  private _updateSelectedTextTrack () {\r\n    const playerTextTracks = this.player.textTracks()\r\n    let activeTrack: TextTrack = null\r\n\r\n    for (let j = 0; j < playerTextTracks.length; j++) {\r\n      if (playerTextTracks[ j ].mode === 'showing') {\r\n        activeTrack = playerTextTracks[ j ]\r\n        break\r\n      }\r\n    }\r\n\r\n    const hlsjsTracks = this.videoElement.textTracks\r\n    for (let k = 0; k < hlsjsTracks.length; k++) {\r\n      if (hlsjsTracks[ k ].kind === 'subtitles' || hlsjsTracks[ k ].kind === 'captions') {\r\n        hlsjsTracks[ k ].mode = activeTrack && this._isSameTextTrack(hlsjsTracks[ k ], activeTrack)\r\n          ? 'showing'\r\n          : 'disabled'\r\n      }\r\n    }\r\n  }\r\n\r\n  private _startLoad () {\r\n    this.hls.startLoad(-1)\r\n    this.videoElement.removeEventListener('play', this.handlers.play)\r\n  }\r\n\r\n  private _oneLevelObjClone (obj: object) {\r\n    const result = {}\r\n    const objKeys = Object.keys(obj)\r\n    for (let i = 0; i < objKeys.length; i++) {\r\n      result[ objKeys[ i ] ] = obj[ objKeys[ i ] ]\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  private _filterDisplayableTextTracks (textTracks: TextTrackList) {\r\n    const displayableTracks = []\r\n\r\n    // Filter out tracks that is displayable (captions or subtitles)\r\n    for (let idx = 0; idx < textTracks.length; idx++) {\r\n      if (textTracks[ idx ].kind === 'subtitles' || textTracks[ idx ].kind === 'captions') {\r\n        displayableTracks.push(textTracks[ idx ])\r\n      }\r\n    }\r\n\r\n    return displayableTracks\r\n  }\r\n\r\n  private _updateTextTrackList () {\r\n    const displayableTracks = this._filterDisplayableTextTracks(this.videoElement.textTracks)\r\n    const playerTextTracks = this.player.textTracks()\r\n\r\n    // Add stubs to make the caption switcher shows up\r\n    // Adding the Hls.js text track in will make us have double captions\r\n    for (let idx = 0; idx < displayableTracks.length; idx++) {\r\n      let isAdded = false\r\n\r\n      for (let jdx = 0; jdx < playerTextTracks.length; jdx++) {\r\n        if (this._isSameTextTrack(displayableTracks[ idx ], playerTextTracks[ jdx ])) {\r\n          isAdded = true\r\n          break\r\n        }\r\n      }\r\n\r\n      if (!isAdded) {\r\n        const hlsjsTextTrack = displayableTracks[ idx ]\r\n        this.player.addRemoteTextTrack({\r\n          kind: hlsjsTextTrack.kind as videojs.TextTrack.Kind,\r\n          label: this._getTextTrackLabel(hlsjsTextTrack),\r\n          language: hlsjsTextTrack.language,\r\n          srclang: hlsjsTextTrack.language\r\n        }, false)\r\n      }\r\n    }\r\n\r\n    // Handle UI switching\r\n    this._updateSelectedTextTrack()\r\n\r\n    if (!this.uiTextTrackHandled) {\r\n      this.handlers.textTracksChange = this._updateSelectedTextTrack.bind(this)\r\n      playerTextTracks.addEventListener('change', this.handlers.textTracksChange)\r\n\r\n      this.uiTextTrackHandled = true\r\n    }\r\n  }\r\n\r\n  private _onMetaData (_event: any, data: Hlsjs.ManifestLoadedData) {\r\n    // This could arrive before 'loadedqualitydata' handlers is registered, remember it so we can raise it later\r\n    this.metadata = data as any\r\n    this._handleQualityLevels()\r\n  }\r\n\r\n  private _createCueHandler (captionConfig: any) {\r\n    return {\r\n      newCue: (track: any, startTime: number, endTime: number, captionScreen: { rows: any[] }) => {\r\n        let row: any\r\n        let cue: VTTCue\r\n        let text: string\r\n        const VTTCue = (window as any).VTTCue || (window as any).TextTrackCue\r\n\r\n        for (let r = 0; r < captionScreen.rows.length; r++) {\r\n          row = captionScreen.rows[ r ]\r\n          text = ''\r\n\r\n          if (!row.isEmpty()) {\r\n            for (let c = 0; c < row.chars.length; c++) {\r\n              text += row.chars[ c ].ucharj\r\n            }\r\n\r\n            cue = new VTTCue(startTime, endTime, text.trim())\r\n\r\n            // typeof null === 'object'\r\n            if (captionConfig != null && typeof captionConfig === 'object') {\r\n              // Copy client overridden property into the cue object\r\n              const configKeys = Object.keys(captionConfig)\r\n\r\n              for (let k = 0; k < configKeys.length; k++) {\r\n                cue[ configKeys[ k ] ] = captionConfig[ configKeys[ k ] ]\r\n              }\r\n            }\r\n            track.addCue(cue)\r\n            if (endTime === startTime) track.addCue(new VTTCue(endTime + 5, ''))\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _initHlsjs () {\r\n    const techOptions = this.tech.options_ as HlsjsConfigHandlerOptions\r\n    const srOptions_ = this.player.srOptions_\r\n\r\n    const hlsjsConfigRef = srOptions_ && srOptions_.hlsjsConfig || techOptions.hlsjsConfig\r\n    // Hls.js will write to the reference thus change the object for later streams\r\n    this.hlsjsConfig = hlsjsConfigRef ? this._oneLevelObjClone(hlsjsConfigRef) : {}\r\n\r\n    if ([ '', 'auto' ].includes(this.videoElement.preload) && !this.videoElement.autoplay && this.hlsjsConfig.autoStartLoad === undefined) {\r\n      this.hlsjsConfig.autoStartLoad = false\r\n    }\r\n\r\n    \r\n\r\n    const captionConfig = srOptions_ && srOptions_.captionConfig || techOptions.captionConfig\r\n    if (captionConfig) {\r\n      this.hlsjsConfig.cueHandler = this._createCueHandler(captionConfig)\r\n    }\r\n    // If the user explicitly sets autoStartLoad to false, we're not going to enter the if block above\r\n    // That's why we have a separate if block here to set the 'play' listener\r\n    if (this.hlsjsConfig.autoStartLoad === false) {\r\n      this.handlers.play = this._startLoad.bind(this)\r\n      this.videoElement.addEventListener('play', this.handlers.play)\r\n    }\r\n\r\n    // _notifyVideoQualities sometimes runs before the quality picker event handler is registered -> no video switcher\r\n    this.handlers.playing = this._notifyVideoQualities.bind(this)\r\n    this.videoElement.addEventListener('playing', this.handlers.playing)\r\n\r\n    //this.hlsjsConfig.debug = true\r\n   \r\n    //this.hlsjsConfig.liveSyncDurationCount = 4\r\n\r\n    //this.hlsjsConfig.maxMaxBufferLength = 55\r\n    //this.hlsjsConfig.backBufferLength = 90\r\n\r\n    ///// liveSyncPosition\r\n    /* @ts-ignore */\r\n    this.hlsjsConfig.capLevelController = CapLevelController\r\n\r\n    console.log(\"INITHLS\")\r\n\r\n    this.hls = new Hlsjs.default(this.hlsjsConfig)\r\n\r\n\r\n    this._executeHooksFor('beforeinitialize')\r\n\r\n    this.hls.on(Hlsjs.Events.ERROR, (event : any, data : any) => this._onError(event, data))\r\n    this.hls.on(Hlsjs.Events.AUDIO_TRACKS_UPDATED, () => this._onAudioTracks())\r\n    this.hls.on(Hlsjs.Events.MANIFEST_PARSED, (event : any, data : any) => this._onMetaData(event, data as any)) // FIXME: typings\r\n    this.hls.on(Hlsjs.Events.LEVEL_LOADED, (event : any, data : any) => {\r\n\r\n      // The DVR plugin will auto seek to \"live edge\" on start up\r\n      if (this.hlsjsConfig.liveSyncDuration) {\r\n        this.edgeMargin = this.hlsjsConfig.liveSyncDuration\r\n      } else if (this.hlsjsConfig.liveSyncDurationCount) {\r\n        this.edgeMargin = this.hlsjsConfig.liveSyncDurationCount * data.details.targetduration\r\n      }\r\n\r\n      this.isLive = data.details.live\r\n      this.dvrDuration = data.details.totalduration\r\n      this._duration = this.isLive ? Infinity : data.details.totalduration\r\n    })\r\n    this.hls.once(Hlsjs.Events.FRAG_LOADED, () => {\r\n      // Emit custom 'loadedmetadata' event for parity with `videojs-contrib-hls`\r\n      // Ref: https://github.com/videojs/videojs-contrib-hls#loadedmetadata\r\n      this.tech.trigger('loadedmetadata')\r\n    })\r\n\r\n\r\n    this.hls.once(Hlsjs.Events.FRAG_BUFFERED, (e) => {\r\n\r\n    })\r\n\r\n    this.hls.attachMedia(this.videoElement)\r\n\r\n    this.hls.loadSource(this.source.src)\r\n  }\r\n\r\n  private initialize () {\r\n    this._initHlsjs()\r\n  }\r\n}\r\n\r\nexport {\r\n  Html5Hlsjs,\r\n  registerSourceHandler,\r\n  registerConfigPlugin\r\n}\r\n","import videojs from 'video.js'\r\nimport { P2PMediaLoaderPluginOptions, PlayerNetworkInfo } from '../peertube-videojs-typings'\r\nimport { Engine, initHlsJsPlayer, initVideoJsContribHlsJsPlayer } from './core/p2p-media-loader-master/p2p-media-loader-hlsjs/lib'\r\n\r\nimport { Events, Segment } from './core/p2p-media-loader-master/p2p-media-loader-core/lib'\r\nimport { timeToInt } from '../utils'\r\nimport { registerConfigPlugin, registerSourceHandler } from './hls-plugin'\r\nimport * as Hlsjs from 'hls.js'\r\n\r\nregisterConfigPlugin(videojs)\r\nregisterSourceHandler(videojs)\r\n\r\nconst Plugin = videojs.getPlugin('plugin')\r\nclass P2pMediaLoaderPlugin extends Plugin {\r\n\r\n  private readonly CONSTANTS = {\r\n    INFO_SCHEDULER: 1000 // Don't change this\r\n  }\r\n  private readonly options: P2PMediaLoaderPluginOptions\r\n\r\n  private hlsjs: Hlsjs.default\r\n  private p2pEngine: Engine\r\n  private statsP2PBytes = {\r\n    pendingDownload: [] as number[],\r\n    pendingUpload: [] as number[],\r\n    numPeers: 0,\r\n    totalDownload: 0,\r\n    totalUpload: 0\r\n  }\r\n  private statsHTTPBytes = {\r\n    pendingDownload: [] as number[],\r\n    pendingUpload: [] as number[],\r\n    totalDownload: 0,\r\n    totalUpload: 0\r\n  }\r\n  private startTime: number\r\n\r\n  private networkInfoInterval: any\r\n\r\n  constructor (player: videojs.Player, options?: P2PMediaLoaderPluginOptions) {\r\n    super(player)\r\n\r\n   \r\n\r\n    this.options = options\r\n\r\n    // FIXME: typings https://github.com/Microsoft/TypeScript/issues/14080\r\n    if (!(videojs as any).Html5Hlsjs) {\r\n      console.warn('HLS.js does not seem to be supported. Try to fallback to built in HLS.')\r\n\r\n      if (!player.canPlayType('application/vnd.apple.mpegurl')) {\r\n        const message = 'Cannot fallback to built-in HLS'\r\n        console.warn(message)\r\n\r\n        player.ready(() => player.trigger('error', new Error(message)))\r\n        return\r\n      }\r\n    } else {\r\n      // FIXME: typings https://github.com/Microsoft/TypeScript/issues/14080\r\n      (videojs as any).Html5Hlsjs.addHook('beforeinitialize', (videojsPlayer: any, hlsjs: any) => {\r\n        this.hlsjs = hlsjs\r\n      })\r\n\r\n      initVideoJsContribHlsJsPlayer(player)\r\n    }\r\n\r\n    if(options){\r\n      this.startTime = timeToInt(options.startTime)\r\n\r\n      player.src({\r\n        type: options.type,\r\n        src: options.src\r\n      })\r\n    }\r\n   \r\n\r\n    player.ready(() => {\r\n      this.initializeCore()\r\n\r\n      if ((videojs as any).Html5Hlsjs) {\r\n        if(options)\r\n          this.initializePlugin()\r\n      }\r\n    })\r\n  }\r\n\r\n  dispose () {\r\n    if (this.hlsjs) this.hlsjs.destroy()\r\n    if (this.p2pEngine) this.p2pEngine.destroy()\r\n\r\n    clearInterval(this.networkInfoInterval)\r\n  }\r\n\r\n  getHLSJS () {\r\n    return this.hlsjs\r\n  }\r\n\r\n  private initializeCore () {\r\n    this.player.one('play', () => {\r\n      this.player.addClass('vjs-has-big-play-button-clicked')\r\n    })\r\n\r\n    this.player.one('canplay', () => {\r\n      if (this.startTime) {\r\n        this.player.currentTime(this.startTime)\r\n      }\r\n    })\r\n  }\r\n\r\n  private initializePlugin () {\r\n    initHlsJsPlayer(this.hlsjs)\r\n\r\n\r\n    // FIXME: typings\r\n    const options = this.player.tech(true).options_ as any\r\n    this.p2pEngine = options.hlsjsConfig.loader.getEngine()\r\n\r\n    \r\n\r\n    this.hlsjs.on(Hlsjs.Events.LEVEL_SWITCHING, (_: any, data: any) => {\r\n\r\n      console.log(\"LEVEL_SWITCHING\")\r\n\r\n      this.trigger('resolutionChange', { auto: this.hlsjs.autoLevelEnabled, resolutionId: data.height })\r\n\r\n    })\r\n\r\n    this.p2pEngine.on(Events.SegmentError, (segment: Segment, err) => {\r\n      this.options.redundancyUrlManager.removeBySegmentUrl(segment.requestUrl)\r\n    })\r\n\r\n    this.statsP2PBytes.numPeers = 1 + this.options.redundancyUrlManager.countBaseUrls()\r\n\r\n    this.runStats()\r\n  }\r\n\r\n  private runStats () {\r\n    this.p2pEngine.on(Events.PieceBytesDownloaded, (method: string, segment:any, size: number) => {\r\n      const elem = method === 'p2p' ? this.statsP2PBytes : this.statsHTTPBytes\r\n\r\n      elem.pendingDownload.push(size)\r\n      elem.totalDownload += size\r\n    })\r\n\r\n    this.p2pEngine.on(Events.PieceBytesUploaded, (method: string, segment:any, size: number) => {\r\n      const elem = method === 'p2p' ? this.statsP2PBytes : this.statsHTTPBytes\r\n\r\n      elem.pendingUpload.push(size)\r\n      elem.totalUpload += size\r\n    })\r\n\r\n    this.p2pEngine.on(Events.PeerConnect, () => this.statsP2PBytes.numPeers++)\r\n    this.p2pEngine.on(Events.PeerClose, () => this.statsP2PBytes.numPeers--)\r\n\r\n    this.networkInfoInterval = setInterval(() => {\r\n      const p2pDownloadSpeed = this.arraySum(this.statsP2PBytes.pendingDownload)\r\n      const p2pUploadSpeed = this.arraySum(this.statsP2PBytes.pendingUpload)\r\n\r\n      const httpDownloadSpeed = this.arraySum(this.statsHTTPBytes.pendingDownload)\r\n      const httpUploadSpeed = this.arraySum(this.statsHTTPBytes.pendingUpload)\r\n\r\n      this.statsP2PBytes.pendingDownload = []\r\n      this.statsP2PBytes.pendingUpload = []\r\n      this.statsHTTPBytes.pendingDownload = []\r\n      this.statsHTTPBytes.pendingUpload = []\r\n\r\n      return this.player.trigger('p2pInfo', {\r\n        source: 'p2p-media-loader',\r\n        http: {\r\n          downloadSpeed: httpDownloadSpeed,\r\n          uploadSpeed: httpUploadSpeed,\r\n          downloaded: this.statsHTTPBytes.totalDownload,\r\n          uploaded: this.statsHTTPBytes.totalUpload\r\n        },\r\n        p2p: {\r\n          downloadSpeed: p2pDownloadSpeed,\r\n          uploadSpeed: p2pUploadSpeed,\r\n          numPeers: this.statsP2PBytes.numPeers,\r\n          downloaded: this.statsP2PBytes.totalDownload,\r\n          uploaded: this.statsP2PBytes.totalUpload\r\n        }\r\n      } as PlayerNetworkInfo)\r\n    }, this.CONSTANTS.INFO_SCHEDULER)\r\n  }\r\n\r\n  private arraySum (data: number[]) {\r\n    return data.reduce((a: number, b: number) => a + b, 0)\r\n  }\r\n}\r\n\r\nvideojs.registerPlugin('p2pMediaLoader', P2pMediaLoaderPlugin)\r\nexport { P2pMediaLoaderPlugin }\r\n"],"sourceRoot":""}